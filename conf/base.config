// basic information about the workflow
manifest {
  name = 'quick-rnaseq-nf'
  description = 'A basic and quick workflow for differential expression analysis'
  version = '0.3.0'
  homePage = 'https://github.com/stracquadaniolab/quick-rnaseq-nf.git'
  author = 'Giovanni Stracquadanio'
  nextflowVersion = '>=20.07.1'
}

// Default configuration
executor {
	name = 'local'
	cpus   = 4
	memory = 8.GB
}

process {
	executor = 'local'
	cpus = 2
	memory = 4.GB
	shell = ['/bin/bash', '-euo', 'pipefail']
}

// Export this variable to prevent local Python libraries 
// from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// PROFILE CONFIGURATIONS
profiles {

  docker {
      docker.enabled         = true
      docker.userEmulation   = true
      singularity.enabled    = false
      podman.enabled         = false
      shifter.enabled        = false
      charliecloud.enabled   = false

      // specify the container to be used
      process.container = "ghcr.io/stracquadaniolab/quick-rnaseq-nf:v0.3.0"
  }

  singularity {
      singularity.enabled    = true
      singularity.autoMounts = true
      docker.enabled         = false
      podman.enabled         = false
      shifter.enabled        = false
      charliecloud.enabled   = false

      // specify the container to be used
      process.container = "docker://ghcr.io/stracquadaniolab/quick-rnaseq-nf:v0.3.0"
  }

  // Son of Grid Engine configuration
  slurm {
	  process {
      executor = 'slurm'
      queue = 'compute'
      queueSize = 50
    }
  }

  // GitHub actions configuration to run test pipeline
  ci {
    executor {
      name = 'local'
      cpus   = 2
      memory = 6.GB
    }

    process {
      executor = 'local'
      cpus = 1
      memory = 2.GB
    }
  }

  // test profile defining some data
  test {
    params {
      codename = 'test'

      // input/output information 
      transcriptome.reference = "./testdata/gencode.v38.transcripts.fa.gz"
      transcriptome.decoys = "./testdata/gencode.v38.decoys.fa.gz"
      
      // design information
      experiment.samplesheet = "./testdata/polyester/samplesheet.csv"
      experiment.contrasts = [['case', 'control'],['control','case']]
    }
  }
}

// configuring log information
timeline {
  enabled = true
  file = "logs/execution_timeline.html"
}

report {
  enabled = true
  file = "logs/execution_report.html"
}

trace {
  enabled = true
  file = "logs/execution_trace.txt"
}